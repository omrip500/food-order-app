{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omrip\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\Web Studying\\\\React course\\\\Food Order App\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\n\n// const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvilableMeals = () => {\n  _s();\n  const [availableMeals, setAvailableMeals] = useState([]);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const fetchAvailableMeals = async () => {\n      try {\n        const response = await fetch(\"https://food-order-app-905f2-default-rtdb.firebaseio.com/melas.json\");\n        const data = await response.json();\n        const responseMeals = [];\n        const mealsss = [];\n        for (const meal in data) {\n          mealsss.push({\n            id: meal,\n            description: data[meal].description,\n            name: data[meal].name,\n            price: data[meal].price\n          });\n        }\n        console.log(mealsss);\n        console.log(responseMeals);\n        setAvailableMeals(responseMeals);\n        if (!response.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchAvailableMeals();\n  }, []);\n  const mealsList = availableMeals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(AvilableMeals, \"aRT4PYGEQGWVbn595Lg9CTqcqrY=\");\n_c = AvilableMeals;\nexport default AvilableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvilableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","jsxDEV","_jsxDEV","AvilableMeals","_s","availableMeals","setAvailableMeals","error","setError","fetchAvailableMeals","response","fetch","data","json","responseMeals","mealsss","meal","push","id","description","name","price","console","log","ok","Error","message","mealsList","map","fileName","_jsxFileName","lineNumber","columnNumber","className","meals","children","_c","$RefreshReg$"],"sources":["C:/Users/omrip/OneDrive/שולחן העבודה/Web Studying/React course/Food Order App/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// const DUMMY_MEALS = [\r\n//   {\r\n//     id: \"m1\",\r\n//     name: \"Sushi\",\r\n//     description: \"Finest fish and veggies\",\r\n//     price: 22.99,\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     name: \"Schnitzel\",\r\n//     description: \"A german specialty!\",\r\n//     price: 16.5,\r\n//   },\r\n//   {\r\n//     id: \"m3\",\r\n//     name: \"Barbecue Burger\",\r\n//     description: \"American, raw, meaty\",\r\n//     price: 12.99,\r\n//   },\r\n//   {\r\n//     id: \"m4\",\r\n//     name: \"Green Bowl\",\r\n//     description: \"Healthy...and green...\",\r\n//     price: 18.99,\r\n//   },\r\n// ];\r\n\r\nconst AvilableMeals = () => {\r\n  const [availableMeals, setAvailableMeals] = useState([]);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchAvailableMeals = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://food-order-app-905f2-default-rtdb.firebaseio.com/melas.json\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const responseMeals = [];\r\n        const mealsss = [];\r\n\r\n        for (const meal in data) {\r\n          mealsss.push({\r\n            id: meal,\r\n            description: data[meal].description,\r\n            name: data[meal].name,\r\n            price: data[meal].price,\r\n          });\r\n        }\r\n\r\n        console.log(mealsss);\r\n        console.log(responseMeals);\r\n\r\n        setAvailableMeals(responseMeals);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n    fetchAvailableMeals();\r\n  }, []);\r\n\r\n  const mealsList = availableMeals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvilableMeals;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qEACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,aAAa,GAAG,EAAE;QACxB,MAAMC,OAAO,GAAG,EAAE;QAElB,KAAK,MAAMC,IAAI,IAAIJ,IAAI,EAAE;UACvBG,OAAO,CAACE,IAAI,CAAC;YACXC,EAAE,EAAEF,IAAI;YACRG,WAAW,EAAEP,IAAI,CAACI,IAAI,CAAC,CAACG,WAAW;YACnCC,IAAI,EAAER,IAAI,CAACI,IAAI,CAAC,CAACI,IAAI;YACrBC,KAAK,EAAET,IAAI,CAACI,IAAI,CAAC,CAACK;UACpB,CAAC,CAAC;QACJ;QAEAC,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;QACpBO,OAAO,CAACC,GAAG,CAACT,aAAa,CAAC;QAE1BR,iBAAiB,CAACQ,aAAa,CAAC;QAEhC,IAAI,CAACJ,QAAQ,CAACc,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACmB,OAAO,CAAC;MACzB;IACF,CAAC;IACDjB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,SAAS,GAAGtB,cAAc,CAACuB,GAAG,CAAEZ,IAAI,iBACxCd,OAAA,CAACL,QAAQ;IACPqB,EAAE,EAAEF,IAAI,CAACE,EAAG;IAEZE,IAAI,EAAEJ,IAAI,CAACI,IAAK;IAChBD,WAAW,EAAEH,IAAI,CAACG,WAAY;IAC9BE,KAAK,EAAEL,IAAI,CAACK;EAAM,GAHbL,IAAI,CAACE,EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIb,CACF,CAAC;EACF,oBACE9B,OAAA;IAAS+B,SAAS,EAAEnC,OAAO,CAACoC,KAAM;IAAAC,QAAA,eAChCjC,OAAA,CAACN,IAAI;MAAAuC,QAAA,eACHjC,OAAA;QAAAiC,QAAA,EAAKR;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAvDID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}